apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. Will be used in deployment below.
  name: nodered-pv-claim
  labels:
    app: nodered-storage-claim
spec:
  # Read more about access modes here: http://kubernetes.io/docs/user-guide/persistent-volumes/#access-modes
  accessModes:
  - ReadWriteOnce
#  storageClassName: dynamic
  resources:
    # This is the request for storage. Should be available in the cluster.
    requests:
      storage: 1Gi
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: nodered-deployment
spec:
  selector:
    matchLabels:
      app: nodered
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        # Label is used as selector in the service.
        app: nodered
    spec:
      # Refer to the PVC created earlier
      volumes:
      - name: storage
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: nodered-pv-claim
      initContainers:
      - image: busybox
        name: fix-perms
        command: ["sh", "-c", "chown -R 1001:1001 /data"]
        volumeMounts:
        - name: storage
          mountPath: /data
      containers:
      - name: nodered
        # Pulls the default nodered image from Docker Hub
        image: nodered/node-red-docker
        ports:
        - containerPort: 1880
        # Mount the volume into the pod
        volumeMounts:
        - name: storage # must match the volume name, above
          mountPath: "/data"
---
apiVersion: v1
kind: Service
metadata:
  name: nodered
spec:
  selector:
    app: nodered
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 1880
    protocol: TCP
